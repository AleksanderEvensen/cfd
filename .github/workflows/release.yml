name: Create Release binary

on:
  push:
    tags:
      # Run on version number tags
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build_binaries:
    name: Build the rust binaries
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            name: cfd-x86_64-windows.zip

          - target: i686-pc-windows-gnu
            name: cfd-32bit-windows.zip

          - target: x86_64-unknown-linux-gnu
            name: cfd-x86_64-linux.tar.gz

          - target: i686-unknown-linux-gnu
            name: cfd-32bit-linux.tar.gz

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup | Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build | Rust Cargo
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: true
          args: --release --target ${{ matrix.target }}

      - name: Post Build | Package (Windows)
        if: matrix.target == 'x86_64-pc-windows-gnu' || matrix.target == 'i686-pc-windows-gnu'
        run: |
          cd target/${{ matrix.target }}/release
          zip ../../../${{ matrix.name }} cfd.exe
          cd -

      - name: Post Build | Package
        if: matrix.target != 'x86_64-pc-windows-gnu' && matrix.target != 'i686-pc-windows-gnu'
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf ../../../${{ matrix.name }} cfd
          cd -

      # Upload files for download in other job
      - name: Post Build | Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: ${{ matrix.name }}

  publish_release:
    name: Publish Release on Github
    needs: [build_binaries]
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - name: List Files
        run: |
          ls -laR

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./x86_64-pc-windows-gnu/cfd-x86_64-windows.zip
            ./i686-pc-windows-gnu/cfd-32bit-windows.zip
            ./x86_64-unknown-linux-gnu/cfd-x86_64-linux.tar.gz
            ./i686-unknown-linux-gnu/cfd-32bit-linux.tar.gz
